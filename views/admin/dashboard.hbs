
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f8f9fa;
      margin: 0;
      padding: 0;
      min-height: 100vh;
    }
    
    .container-fluid {
      padding: 20px;
    }
    
    .stats-container {
      display: flex;
      justify-content: space-around;
      flex-wrap: wrap;
      gap: 20px;
      margin: 30px 0;
    }
    
    .card {
      flex: 1;
      min-width: 200px;
      max-width: 250px;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      transition: transform 0.3s;
    }
    
    .card:hover {
      transform: translateY(-5px);
    }
    
    .tables-container {
      display: flex;
      flex-wrap: wrap;
      gap: 30px;
      margin-top: 30px;
    }
    
     .table-wrapper:first-child {
        flex: 2; /* Takes twice as much space as the second table */
        min-width: 400px; /* Increased minimum width */
    }

    /* Top-Selling Products Table - Narrower */
    .table-wrapper:last-child {
        flex: 1;
        min-width: 300px;
    }
    .chart-container {
      background: white;
      padding: 20px;
      border-radius: 10px;
      margin-top: 30px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
      position: relative;
      height: 400px;
    }
    
    .chart-controls {
      margin: 15px 0;
      text-align: center;
    }
    
    .active-period {
      background-color: rgb(228, 178, 117) !important;
      color: white !important;
      border-color: rgb(228, 178, 117) !important;
    }
    
    .badge {
      font-size: 0.75em;
      padding: 0.5em 0.75em;
      border-radius: 0.25em;
      margin-right: 5px;
      margin-bottom: 5px;
      display: inline-block;
    }
    
    .brand-color {
      background-color: rgb(228, 178, 117);
      color: white;
    }
    
    .period-selector {
      transition: all 0.3s ease;
      min-width: 80px;
    }
    .table-responsive {
        overflow: visible !important; /* This removes the scrollbar */
    }

    /* Make sure the table takes full width */
    .table-responsive table {
        width: 100%;
    }

  </style>

<body>
  <div class="container-fluid">
    <button type="button" class="btn brand-color mt-4" data-bs-toggle="modal" data-bs-target="#addAdminModal">
      Add Admin
    </button>

    <div class="container mt-4">
      <h3 class="text-center mb-4" style="color:rgb(228, 178, 117);">ðŸ“Š Dashboard</h3>

      <!-- Stats Cards -->
      <div class="stats-container">
        <div class="card text-white brand-color">
          <div class="card-body text-center">
            <h5 class="card-title">Total Sales</h5>
            <h2 class="card-text">â‚¹{{totalSales}}</h2>
          </div>
        </div>
        
        <div class="card text-white" style="background-color:rgb(207, 175, 136);">
          <div class="card-body text-center">
            <h5 class="card-title">Total Orders</h5>
            <h2 class="card-text">{{totalOrders}}</h2>
          </div>
        </div>
        
        <div class="card text-dark" style="background-color:rgb(186, 204, 167);">
          <div class="card-body text-center">
            <h5 class="card-title">Products Sold</h5>
            <h2 class="card-text">{{totalProductSold}}</h2>
          </div>
        </div>
        
        <div class="card text-white" style="background-color:rgb(207, 167, 167);">
          <div class="card-body text-center">
            <h5 class="card-title">Pending Orders</h5>
            <h2 class="card-text">{{pendingOrders}}</h2>
          </div>
        </div>
      </div>

      {{!-- <!-- Sales Chart -->
      <div class="chart-container">
        <div class="chart-controls">
          <div class="btn-group" role="group">
            <button type="button" class="btn btn-outline-secondary period-selector active-period" data-period="daily">Daily</button>
            <button type="button" class="btn btn-outline-secondary period-selector" data-period="weekly">Weekly</button>
            <button type="button" class="btn btn-outline-secondary period-selector" data-period="monthly">Monthly</button>
          </div>
        </div>
        <canvas id="salesChart"></canvas>
      </div> --}}

      <!-- Tables Section -->
      <div class="tables-container">
        <div class="table-wrapper">
          <h4 class="mb-3">ðŸ“¦ Recent Orders</h4>
          <div class="table-responsive">
            <table class="table table-hover">
              <thead class="table-light">
                <tr>
                  <th>Order ID</th>
                  <th>Customer</th>
                  <th>Total</th>
                  <th>Status</th>
                  <th>Payment</th>
                </tr>
              </thead>
              <tbody>
                {{#each orders}}
                <tr>
                  <td>{{this._id}}</td>
                  <td>{{this.userId.name}}</td>
                  <td>â‚¹{{this.totalPrice}}</td>
                  <td>
                    {{#each (getStatusCounts this.items)}}
                    <span class="badge bg-{{statusColor @key}}">
                      {{@key}}: {{this}}
                    </span>
                    {{/each}}
                  </td>
                  <td>{{this.payment}}</td>
                </tr>
                {{/each}}
              </tbody>
            </table>
          </div>
        </div>

        <div class="table-wrapper">
          <h4 class="mb-3">ðŸŒŸ Top-Selling Products</h4>
          <div class="table-responsive">
            <table class="table table-hover">
              <thead class="table-light">
                <tr>
                  <th>Product Name</th>
                  <th>Units Sold</th>
                  <th>Total Revenue</th>
                </tr>
              </thead>
              <tbody>
                {{#each topSellingProducts}}
                <tr>
                  <td>{{this.productDetails.name}}</td>
                  <td>{{this.unitsSold}}</td>
                  <td>â‚¹{{this.revenue}}</td>
                </tr>
                {{/each}}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  {{!-- <script>
    // Initialize chart with default period
    let currentPeriod = 'weekly';
    let salesChart;
    const salesData = {{{salesData}}};

    // Format date labels based on period
    function formatDateLabel(dateString, period) {
      if (period === 'daily') {
        return new Date(dateString).toLocaleDateString('en-IN', { day: 'numeric', month: 'short' });
      }
      if (period === 'weekly') {
        const [year, week] = dateString.split('-');
        return `Week ${week}, ${year}`;
      }
      return new Date(`${dateString}-01`).toLocaleDateString('en-IN', { month: 'short', year: 'numeric' });
    }

    // Initialize or update chart
    function renderChart() {
      const ctx = document.getElementById('salesChart').getContext('2d');
      const periodData = salesData[currentPeriod] || [];
      
      const chartData = {
        labels: periodData.map(entry => formatDateLabel(entry._id, currentPeriod)),
        revenueData: periodData.map(entry => entry.total),
        orderCountData: periodData.map(entry => entry.count)
      };

      if (salesChart) {
        salesChart.destroy();
      }

      salesChart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: chartData.labels,
          datasets: [
            {
              label: 'Sales Revenue (â‚¹)',
              data: chartData.revenueData,
              backgroundColor: 'rgba(228, 178, 117, 0.7)',
              borderColor: 'rgba(228, 178, 117, 1)',
              borderWidth: 1,
              yAxisID: 'y'
            },
            {
              label: 'Number of Orders',
              data: chartData.orderCountData,
              type: 'line',
              borderColor: 'rgba(100, 149, 237, 1)',
              backgroundColor: 'rgba(100, 149, 237, 0.1)',
              borderWidth: 2,
              pointRadius: 4,
              pointBackgroundColor: 'rgba(100, 149, 237, 1)',
              yAxisID: 'y1'
            }
          ]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              position: 'top',
              labels: {
                usePointStyle: true,
                padding: 20
              }
            },
            tooltip: {
              callbacks: {
                label: function(context) {
                  let label = context.dataset.label || '';
                  if (label.includes('Revenue')) {
                    return `${label}: â‚¹${context.raw.toLocaleString('en-IN')}`;
                  }
                  return `${label}: ${context.raw}`;
                }
              }
            }
          },
          scales: {
            x: {
              grid: {
                display: false
              }
            },
            y: {
              type: 'linear',
              display: true,
              position: 'left',
              title: {
                display: true,
                text: 'Revenue (â‚¹)'
              },
              grid: {
                drawOnChartArea: true
              }
            },
            y1: {
              type: 'linear',
              display: true,
              position: 'right',
              title: {
                display: true,
                text: 'Order Count'
              },
              grid: {
                drawOnChartArea: false
              },
              min: 0
            }
          }
        }
      });
    }

    // Period selector functionality
    document.addEventListener('DOMContentLoaded', function() {
      renderChart();
      
      document.querySelectorAll('.period-selector').forEach(btn => {
        btn.addEventListener('click', function() {
          currentPeriod = this.dataset.period;
          renderChart();
          document.querySelector('.active-period').classList.remove('active-period');
          this.classList.add('active-period');
        });
      });
    });
  </script> --}}
</body>
