
<style>
body {
    font-family: sans-serif;
    margin: 0;
    padding: 0;
    line-height: 1.6;
    color: #333;
    background: linear-gradient(to right, #f5f5f5, #d6a57a);
}

.container {
    max-width: 1200px;
    margin: 50px auto;
    padding: 20px;
    display: flex;
    gap: 20px;
    background-color: white;
}

.left-column {
    flex: 2; /* Takes 2/3 of the space */
    border: 1px solid #ddd; /* Add border to left column */
    border-radius: 10px; /* Rounded corners */
    padding: 20px; /* Add padding for spacing */
}

.right-column {
    flex: 1; /* Takes 1/3 of the space */
    border: 1px solid #ddd; /* Add border to right column */
    border-radius: 10px; /* Rounded corners */
    padding: 20px; /* Add padding for spacing */
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.header-left {
    display: flex;
    align-items: center;
}

.header-left img {
    width: 50px;
    margin-right: 10px;
}

.header-right {
    display: flex;
    justify-content: center;
    align-items: center;
    flex: 1;
}

.header-right a {
    margin: 0 15px;
    color: black;
    text-decoration: none;
    font-weight: bold;
}

.address {
    margin-bottom: 20px;
    background-color: rgb(232, 218, 200);
    padding: 20px;
    border-radius: 10px;
}

.address-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
}

.address-content {
    background-color: #f8f9fa;
    padding: 15px;
    border-radius: 5px;
}

.item {
    display: flex;
    margin-bottom: 20px;
    border-bottom: 1px solid #eee;
    padding-bottom: 10px;
}

.item img {
    width: 100px;
    margin-right: 10px;
}

.item-details {
    flex: 1;
}

.item-name {
    font-weight: bold;
}

.item-options {
    display: flex;
    align-items: center;
    margin-top: 10px;
}

.item-options select {
    padding: 5px;
    border: 1px solid #ccc;
    border-radius: 3px;
    margin-right: 10px;
}

.item-options button {
    padding: 5px 10px;
    background-color: #dc3545;
    color: white;
    border: none;
    border-radius: 3px;
    cursor: pointer;
}

.price-details {
    background-color: #f8f9fa;
    padding: 20px;
    border-radius: 10px;
    margin-bottom: 20px;
}

.price-summary {
    display: flex;
    justify-content: space-between;
    margin-bottom: 10px;
}

.total-amount {
    font-weight: bold;
    font-size: 1.2rem;
}

.place-order {
    background-color: rgb(228, 178, 117);
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    width: 100%;
}

/* Responsive Styles */
@media (max-width: 768px) {
    .container {
        flex-direction: column;
    }

    .left-column,
    .right-column {
        flex: 1;
    }

    .item {
        flex-direction: column;
        align-items: flex-start;
    }

    .item img {
        width: 80px;
        margin-right: 0;
        margin-bottom: 10px;
    }

    .item-options {
        flex-direction: column;
        align-items: flex-start;
    }

    .item-options select {
        margin-right: 0;
        margin-bottom: 10px;
    }
}
.modal {
display: none; /* Hidden by default */
position: fixed;
z-index: 1;
left: 0;
top: 0;
width: 100%;
height: 100%;
overflow: auto;
background-color: rgba(0, 0, 0, 0.4);
}

.modal-content {
background-color: #fefefe;
margin: 15% auto;
padding: 20px;
border: 1px solid #888;
width: 30%; /* Adjust as needed */
position: relative; /* For positioning close button */
border-radius: 8px; /* Add rounded corners */
box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Add a subtle shadow */
}

.close-btn {
position: absolute;
top: 10px;
right: 15px;
font-size: 20px;
font-weight: bold;
color: #aaa;
cursor: pointer;
}

/* Style the address boxes */
.address-box {
border: 1px solid #ccc;
padding: 15px;
margin-bottom: 10px;
border-radius: 5px;
}

.address-box label {
display: block; /* Make labels clickable */
cursor: pointer;
}

.address-box input[type="radio"] {
margin-right: 10px;
vertical-align: middle; /* Align radio button with text */
}

.home-label {
background-color: #eee;
color: #666;
padding: 3px 8px;
border-radius: 3px;
font-size: 12px;
margin-left: 10px;
}

/* Style buttons */
button {
padding: 8px 15px;
border: none;
border-radius: 5px;
cursor: pointer;
}

.deliver-btn {
background-color: #007bff; /* Blue */
color: white;
}

.edit-btn {
background-color: #ffc107; /* Yellow */
}

.delete-btn {
background-color: #dc3545; /* Red */
color: white;
}

/* Position action buttons in the address box */
.address-actions {
margin-top: 10px;
}

.address-actions button {
margin-right: 5px;
}
/* Modal Styles */
.modal {
    display: none; /* Hidden by default */
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
}

.modal-content {
    background-color: #fefefe;
    margin: 10% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 30%; /* Adjust as needed */
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.close-btn {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 20px;
    font-weight: bold;
    color: #aaa;
    cursor: pointer;
}

.close-btn:hover {
    color: #000;
}

/* Form Styles */
#add-address-form div {
    margin-bottom: 15px;
}

#add-address-form label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
}

#add-address-form input[type="text"],
#add-address-form input[type="checkbox"] {
    width: 100%;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

#add-address-form button {
    background-color: #d6a57a;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    width: 100%;
}

#add-address-form button:hover {
    background-color: #c5946a;
}
.popup {
            display: none;
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #ff4444;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }
</style>

<body>
<div class="container">
<!-- Left Column -->
<div class="left-column">
    <div class="header">
        <div class="header-left">
            <a class="navbar-brand" href="#">FORU</a>
        </div>
        <div class="header-right">
            <a href="/cart" style="color: rgb(216, 214, 214);">Bag</a>
            <a href="/address-cart">2.Address</a>
            <a style="color: rgb(216, 214, 214);">Payment</a>
        </div>
    </div>

 <div class="address">
            <div class="address-header">
                <h3>Delivery Address</h3>
               <button id="add-address-btn" class="deliver-btn" style="background-color:#d6a57a; text-decoration: none; border: none; cursor: pointer; padding: 8px 15px; border-radius: 5px; color: white;">
    + Add New Address
</button>
            </div>
            <div class="address-content">
                {{#if user.addresses.length}}
                    {{#each user.addresses}}
                        <div class="address-box">
                            <label>   
                                <input type="radio" name="addressID" value="{{this._id}}">{{#if this.isDefault}}<span class="home-label">Home</span>{{/if}} {{this.name}} {{this.house}}, <br>{{this.city}}, {{this.state}} - {{this.postalCode}}
                            </label>
                            <!--<div class="address-actions">
                                <button class="edit-btn " data-address-id="{{this.id}}">Edit</button>
  <form action="/remove-cart/{{this._id}}" method="POST" onsubmit="return confirmDelete(event)" style="display:inline;">
  <button class="delete-btn" onclick="removeAddress('{{this._id}}')">REMOVE</button>
</form>
                            </div>-->
                        </div>
                    {{/each}}
                {{else}}
                    <p>No addresses found. Please add a new address.</p>
                {{/if}}
            </div>
        </div>


</div>

<!-- Right Column -->
<div class="right-column">
    <div class="price-details">
        <div class="price-summary">
            <span>Total MRP</span>
            <span>₹{{cart.totalPrice}}</span>
        </div>
        {{#if cart.discountAmount}}
                <div class="price-summary">
                    <span>Coupon discount</span>
                    <span>-₹{{cart.discountAmount}}</span>
                </div>
                
                {{else}}
                <div class="price-summary">
                    <span>Coupon discount</span>
                    <span>0</span>
                </div>
                {{/if}}
        {{#if cart.shippingFee}}
                <div class="price-summary">
                    <span>Shipping Fee</span>
                    <span>{{cart.shippingFee}}</span>
                </div>
                {{else}}
                <div class="price-summary">
                    <span>Shipping Fee</span>
                    <span>FREE</span>
                </div>
                {{/if}}
        <div class="price-summary total-amount">
            <span>Total Amount</span>
            <span>₹{{cart.newTotalAmount}}</span>
        </div>
    </div>
    <div id="address-error" style="color: red; margin-top: 10px; display: none;">
    Please choose a delivery address
</div>
    <button class="place-order">PLACE ORDER</button>
</div>
<div id="popup-message" class="popup">
<span id="popup-text"></span>
</div> 
</div>
<div id="popup-message" class="popup">
    <span id="popup-text"></span>
</div>
<!-- Modal for adding a new address -->
<div id="add-address-modal" class="modal">
    <div class="modal-content">
        <span class="close-btn">&times;</span>
        <h3>Add New Address</h3>
        <form id="add-address-form">
            <div>
                <label for="name">Full Name:</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div>
                <label for="phone">Phone Number:</label>
                <input type="tel" id="phone" name="phone" required>
            </div>
            <div>
                <label for="house">House/Flat No.:</label>
                <input type="text" id="house" name="house" required>
            </div>
            <div>
                <label for="city">City:</label>
                <input type="text" id="city" name="city" required>
            </div>
            <div>
                <label for="state">State:</label>
                <input type="text" id="state" name="state" required>
            </div>
            <div>
                <label for="postalCode">Postal Code:</label>
                <input type="text" id="postalCode" name="postalCode" required>
            </div>
            <div>
                <label for="isDefault">Set as Default Address:</label>
                <input type="checkbox" id="isDefault" name="isDefault">
            </div>
            <button type="submit">Save Address</button>
        </form>
    </div>
</div>
<script>
// Function to show a popup message
function showPopup(message) {
    const popup = document.getElementById('popup-message');
    const popupText = document.getElementById('popup-text');
    popupText.textContent = message;
    popup.style.display = 'block';

    // Hide the popup after 3 seconds
    setTimeout(() => {
        popup.style.display = 'none';
    }, 3000);
}


document.querySelector('.place-order').addEventListener('click', function () {

    const selectedAddressId = localStorage.getItem('selectedAddressId');
    const addressError = document.getElementById('address-error')

    if (!selectedAddressId) {
        addressError.style.display = 'block';
        showPopup('Please select a delivery address.');
        return; 
    }else{
        addressError.style.display = 'none';
    }

    window.location.href = `/payment?addressId=${selectedAddressId}`;
});

document.querySelectorAll('input[name="addressID"]').forEach((radio) => {
    radio.addEventListener('change', function () {
        localStorage.setItem('selectedAddressId', this.value);
        document.getElementById('address-error').style.display = 'none';
    });
});
// Get the modal and buttons
const addAddressModal = document.getElementById('add-address-modal');
const addAddressBtn = document.getElementById('add-address-btn');
const closeBtn = document.querySelector('.close-btn');
const addAddressForm = document.getElementById('add-address-form');

// Open the modal when "Add New Address" button is clicked
addAddressBtn.addEventListener('click', () => {
    addAddressModal.style.display = 'block';
});

// Close the modal when the close button is clicked
closeBtn.addEventListener('click', () => {
    addAddressModal.style.display = 'none';
});

// Close the modal when clicking outside the modal
window.addEventListener('click', (event) => {
    if (event.target === addAddressModal) {
        addAddressModal.style.display = 'none';
    }
});

// Handle form submission
addAddressForm.addEventListener('submit', async (event) => {
    event.preventDefault(); // Prevent the default form submission

    // Get form data
    const formData = {
        name: document.getElementById('name').value,
        house: document.getElementById('house').value,
        phone: document.getElementById('phone').value,
        city: document.getElementById('city').value,
        state: document.getElementById('state').value,
        postalCode: document.getElementById('postalCode').value,
        isDefault: document.getElementById('isDefault').checked,
    };

    try {
        // Send the data to the server using fetch
        const response = await fetch('/add-addresses', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData),
        });

        const data = await response.json();

        if (response.ok) {
            // Close the modal and refresh the page to show the new address
            addAddressModal.style.display = 'none';
            window.location.reload(); // Refresh the page to show the new address
        } else {
            showPopup(data.message || 'Failed to add address.');
        }
    } catch (error) {
        console.error('Error:', error);
        showPopup('An error occurred while adding the address.');
    }
});
</script>